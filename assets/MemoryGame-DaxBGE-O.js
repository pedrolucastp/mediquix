import{u as e,S as a}from"./SelectorsComponent-Cw4VZ0c4.js";import{_ as l,u}from"./index-cXKaoF06.js";import{H as o,w as t,c as s,l as v,j as d,e as i,g as n,q as r,k as c,n as p,p as f,r as m,o as h,t as w,F as g,s as k,a as b,b as _,x as y}from"./vue-vendor-COnmh5Ey.js";import{u as j,G as C}from"./GamePerksMenu-LuGFlCVD.js";import"./firebase-B6Q9gzvC.js";import"./fontawesome-IKCYsCpo.js";const P={class:"card-front"},T={class:"card-back"},M=l({__name:"GameCardFlip",props:{flipped:{type:Boolean,default:!1},matched:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1}},emits:["click"],setup(e,{emit:a}){const l=e,m=a,h=o(l.flipped),w=o(l.matched),g=u(),k=o(g.isDarkMode);t((()=>l.flipped),(e=>{h.value=e}),{flush:"post"}),t((()=>l.matched),(e=>{w.value=e}),{flush:"post"});const b=s((()=>({flipped:h.value,matched:w.value,dark:k.value}))),_=s((()=>({transform:w.value?"scale(0.95)":void 0,willChange:h.value?"transform":void 0}))),y=s((()=>({transform:h.value?"rotateY(180deg)":void 0})));return(a,l)=>{const u=v("font-awesome-icon");return i(),d("div",{class:f(["card",b.value]),style:p(_.value),onClick:l[0]||(l[0]=a=>!e.disabled&&m("click"))},[n("div",{class:"card-inner",style:p(y.value)},[n("div",P,[r(a.$slots,"front",{},(()=>[c(u,{icon:["fas","question"],size:"2x"})]))]),n("div",T,[r(a.$slots,"back",{},void 0)])],4)],6)}}},[["__scopeId","data-v-843b71fd"]]),x={class:"memory-game"},q={id:"definition"},G={id:"game-board"},$={id:"score"},B=l({__name:"MemoryGame",setup(l){const u=e(),{usePerk:o}=j(),t=m(0),s=m([]),v=m(null),r=m([]),p=m([]),f=m(0),P=m(null),T=m(null),B=m(null),S=m([]),A=m(2);function D(){t.value=0,f.value=0,S.value=[],A.value=2,P.value=null,T.value=null,B.value=null;let e=u.words.filter((e=>e.isActive));if(e.length<2)return void alert("Não há palavras suficientes para iniciar o jogo. Por favor, ajuste os filtros.");e.sort((()=>Math.random()-.5)),r.value=e.slice(0,8),p.value=[...r.value],F();const a=[...r.value,...r.value].map((e=>({word:e.word,flipped:!1,matched:!1})));a.sort((()=>Math.random()-.5)),s.value=a}function F(){0===p.value.length?v.value=null:(p.value.sort((()=>Math.random()-.5)),v.value=p.value.pop())}function I(){const e=s.value[P.value],a=s.value[T.value];if(2===A.value||null===B.value)e.word===v.value.word&&a.word===v.value.word?(e.matched=!0,a.matched=!0,S.value.push(e,a),z(),S.value.length===s.value.length?setTimeout((()=>{alert(`Parabéns! Você encontrou todos os pares com ${t.value} cliques.`),D()}),500):setTimeout((()=>{F()}),500)):setTimeout((()=>{V()}),1e3);else{const l=s.value[B.value],u=v.value.word;let o=0;e.word===u&&o++,a.word===u&&o++,l.word===u&&o++,o>=2?([e,a,l].forEach((e=>{e.word===u&&(e.matched=!0)})),S.value.push(...[e,a,l].filter((e=>e.word===u))),z(),A.value=2,S.value.length===s.value.length?setTimeout((()=>{alert(`Parabéns! Você encontrou todos os pares com ${t.value} cliques.`),D()}),500):setTimeout((()=>{F()}),500)):setTimeout((()=>{V(),A.value=2}),1e3)}}function V(){null!==P.value&&(s.value[P.value].flipped=!1),null!==T.value&&(s.value[T.value].flipped=!1),null!==B.value&&(s.value[B.value].flipped=!1),z()}function z(){f.value=0,P.value=null,T.value=null,B.value=null}async function E(e){if(await o(e))if("hint"===e&&v.value){const e=v.value.word,a=s.value.map(((e,a)=>({card:e,idx:a}))).filter((({card:a})=>a.word===e&&!a.matched&&!a.flipped)).map((({idx:e})=>e));a.length>=2&&(s.value[a[0]].flipped=!0,s.value[a[1]].flipped=!0,setTimeout((()=>{I()}),500))}else"open_third_card"===e&&(A.value=3)}return h((()=>{D()})),(e,l)=>(i(),d("div",x,[l[0]||(l[0]=n("h1",null,"Jogo de Memória",-1)),c(a,{onSpecialtyChange:D,onDifficultyChange:D}),c(C,{availablePerks:["hint","open_third_card"],onPerkActivated:E}),n("p",q,w(v.value?v.value.clue:"Todas as palavras foram encontradas!"),1),n("div",G,[(i(!0),d(g,null,k(s.value,((e,a)=>(i(),b(M,{key:a,flipped:e.flipped,matched:e.matched,disabled:f.value>=A.value,onClick:e=>function(e){const a=s.value[e];a.flipped||a.matched||(a.flipped=!0,t.value++,0===f.value?(P.value=e,f.value=1):1===f.value?(T.value=e,f.value=2,2===A.value&&I()):2===f.value&&3===A.value&&(B.value=e,f.value=3,I()))}(a)},{back:_((()=>[y(w(e.word),1)])),_:2},1032,["flipped","matched","disabled","onClick"])))),128))]),n("p",$,"Pontuação: "+w(t.value),1)]))}},[["__scopeId","data-v-9c9ecca7"]]);export{B as default};
//# sourceMappingURL=MemoryGame-DaxBGE-O.js.map
