{"version":3,"file":"MemoryGame-G9yeGsJ1.js","sources":["../../src/components/game/GameCardFlip.vue","../../src/views/MemoryGame.vue"],"sourcesContent":["<template>\n  <div\n    class=\"card\"\n    :class=\"cardClasses\"\n    :style=\"cardStyles\"\n    @click=\"!disabled && emit('click')\"\n  >\n    <div class=\"card-inner\" :style=\"innerStyles\">\n      <div class=\"card-front\">\n        <slot name=\"front\">\n          <font-awesome-icon :icon=\"['fas', 'question']\" size=\"2x\" />\n        </slot>\n      </div>\n      <div class=\"card-back\">\n        <slot name=\"back\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed, shallowRef, watch } from 'vue';\nimport { useUIStore } from '@/store/ui';\n\nconst props = defineProps({\n  flipped: {\n    type: Boolean,\n    default: false\n  },\n  matched: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n});\n\nconst emit = defineEmits(['click']);\n\n// Use shallowRef for better performance on frequently changing props\nconst flippedState = shallowRef(props.flipped);\nconst matchedState = shallowRef(props.matched);\n\n// Cache dark mode state\nconst uiStore = useUIStore();\nconst isDarkMode = shallowRef(uiStore.isDarkMode);\n\n// Watch props efficiently\nwatch(() => props.flipped, (newVal) => {\n  flippedState.value = newVal;\n}, { flush: 'post' });\n\nwatch(() => props.matched, (newVal) => {\n  matchedState.value = newVal;\n}, { flush: 'post' });\n\n// Cache class computation\nconst cardClasses = computed(() => ({\n  flipped: flippedState.value,\n  matched: matchedState.value,\n  dark: isDarkMode.value\n}));\n\n// Cache style computation for transforms\nconst cardStyles = computed(() => ({\n  transform: matchedState.value ? 'scale(0.95)' : undefined,\n  willChange: flippedState.value ? 'transform' : undefined\n}));\n\nconst innerStyles = computed(() => ({\n  transform: flippedState.value ? 'rotateY(180deg)' : undefined\n}));\n</script>\n\n<style scoped>\n.card {\n  aspect-ratio: 3/4;\n  perspective: 1000px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.card.matched {\n  cursor: default;\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n  transform-style: preserve-3d;\n}\n\n.card-front,\n.card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border-radius: var(--radius-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /* padding: var(--spacing-md); */\n  box-shadow: var(--shadow-sm);\n  transition: all 0.3s ease;\n}\n\n.card-front {\n  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));\n  color: white;\n  font-size: 1.5rem;\n  font-weight: 600;\n}\n\n.card-back {\n  background-color: var(--surface-color);\n  border: 1px solid var(--border-color);\n  color: var(--text-color);\n  transform: rotateY(180deg) rotate(-12deg);\n  font-size: 0.9rem;\n  text-align: center;\n}\n\n/* Hover effects */\n.card:not(.matched):hover .card-front {\n  box-shadow: var(--shadow-md);\n  transform: translateZ(10px);\n}\n\n/* Dark mode styles */\n.dark .card-back {\n  background-color: var(--dark-surface-color);\n  color: var(--dark-text-color);\n  border-color: var(--dark-border-color);\n}\n\n/* Responsive styles */\n@media (max-width: 768px) {\n  .card-front {\n    font-size: 1.25rem;\n  }\n\n  .card-back {\n    font-size: 0.8rem;\n  }\n}\n</style>","<template>\n  <div class=\"memory-game\">\n    <h1>Jogo de Memória</h1>\n    <SelectorsComponent\n      @specialty-change=\"createBoard\"\n      @difficulty-change=\"createBoard\"\n    />\n    <GamePerksMenu :availablePerks=\"['hint', 'open_third_card']\" @perk-activated=\"handlePerk\" />\n    <p id=\"definition\">\n      {{\n        currentDefinition\n          ? currentDefinition.clue\n          : \"Todas as palavras foram encontradas!\"\n      }}\n    </p>\n    <div id=\"game-board\">\n      <GameCardFlip\n        v-for=\"(card, index) in gameCards\"\n        :key=\"index\"\n        :flipped=\"card.flipped\"\n        :matched=\"card.matched\"\n        :disabled=\"count >= maxOpenCards\"\n        @click=\"flipCard(index)\"\n      >\n        <template #back>{{ card.word }}</template>\n      </GameCardFlip>\n    </div>\n    <p id=\"score\">Pontuação: {{ score }}</p>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport SelectorsComponent from \"@/components/SelectorsComponent.vue\";\nimport GameCardFlip from \"@/components/game/GameCardFlip.vue\";\nimport GamePerksMenu from '@/components/game/GamePerksMenu.vue';\nimport { useGamePoints } from '@/composables/useGamePoints';\nimport { useVocabularyStore } from \"@/store/vocabulary\";\n\nconst vocabularyStore = useVocabularyStore();\nconst { usePerk } = useGamePoints();\n\nconst score = ref(0);\nconst gameCards = ref([]);\nconst currentDefinition = ref(null);\nconst gameWords = ref([]);\nconst availableDefinitions = ref([]);\nconst count = ref(0);\nconst firstCardIndex = ref(null);\nconst secondCardIndex = ref(null);\nconst thirdCardIndex = ref(null);\nconst matchedCards = ref([]);\nconst maxOpenCards = ref(2); // Default is 2, can be set to 3 by perk\n\nfunction createBoard() {\n  score.value = 0;\n  count.value = 0;\n  matchedCards.value = [];\n  maxOpenCards.value = 2;\n  firstCardIndex.value = null;\n  secondCardIndex.value = null;\n  thirdCardIndex.value = null;\n\n  let filteredWords = vocabularyStore.words.filter((word) => word.isActive);\n  if (filteredWords.length < 2) {\n    alert(\n      \"Não há palavras suficientes para iniciar o jogo. Por favor, ajuste os filtros.\"\n    );\n    return;\n  }\n\n  filteredWords.sort(() => Math.random() - 0.5);\n  gameWords.value = filteredWords.slice(0, 8);\n\n  availableDefinitions.value = [...gameWords.value];\n  selectNextDefinition();\n\n  const cards = [...gameWords.value, ...gameWords.value].map((wordObj) => ({\n    word: wordObj.word,\n    flipped: false,\n    matched: false,\n  }));\n  cards.sort(() => Math.random() - 0.5);\n  gameCards.value = cards;\n}\n\nfunction selectNextDefinition() {\n  if (availableDefinitions.value.length === 0) {\n    currentDefinition.value = null;\n  } else {\n    availableDefinitions.value.sort(() => Math.random() - 0.5);\n    currentDefinition.value = availableDefinitions.value.pop();\n  }\n}\n\nfunction flipCard(index) {\n  const card = gameCards.value[index];\n  if (card.flipped || card.matched) return;\n\n  card.flipped = true;\n  score.value++;\n\n  if (count.value === 0) {\n    firstCardIndex.value = index;\n    count.value = 1;\n  } else if (count.value === 1) {\n    secondCardIndex.value = index;\n    count.value = 2;\n    if (maxOpenCards.value === 2) {\n      checkMatch();\n    }\n  } else if (count.value === 2 && maxOpenCards.value === 3) {\n    thirdCardIndex.value = index;\n    count.value = 3;\n    checkMatch();\n  }\n}\n\nfunction checkMatch() {\n  const firstCard = gameCards.value[firstCardIndex.value];\n  const secondCard = gameCards.value[secondCardIndex.value];\n  if (maxOpenCards.value === 2 || thirdCardIndex.value === null) {\n    if (\n      firstCard.word === currentDefinition.value.word &&\n      secondCard.word === currentDefinition.value.word\n    ) {\n      firstCard.matched = true;\n      secondCard.matched = true;\n      matchedCards.value.push(firstCard, secondCard);\n      resetGuesses();\n      if (matchedCards.value.length === gameCards.value.length) {\n        setTimeout(() => {\n          alert(\n            `Parabéns! Você encontrou todos os pares com ${score.value} cliques.`\n          );\n          createBoard();\n        }, 500);\n      } else {\n        setTimeout(() => {\n          selectNextDefinition();\n        }, 500);\n      }\n    } else {\n      setTimeout(() => {\n        unflipCards();\n      }, 1000);\n    }\n  } else {\n    const thirdCard = gameCards.value[thirdCardIndex.value];\n    const word = currentDefinition.value.word;\n    let matched = 0;\n    if (firstCard.word === word) matched++;\n    if (secondCard.word === word) matched++;\n    if (thirdCard.word === word) matched++;\n    if (matched >= 2) {\n      [firstCard, secondCard, thirdCard].forEach(card => {\n        if (card.word === word) card.matched = true;\n      });\n      matchedCards.value.push(...[firstCard, secondCard, thirdCard].filter(card => card.word === word));\n      resetGuesses();\n      maxOpenCards.value = 2;\n      if (matchedCards.value.length === gameCards.value.length) {\n        setTimeout(() => {\n          alert(\n            `Parabéns! Você encontrou todos os pares com ${score.value} cliques.`\n          );\n          createBoard();\n        }, 500);\n      } else {\n        setTimeout(() => {\n          selectNextDefinition();\n        }, 500);\n      }\n    } else {\n      setTimeout(() => {\n        unflipCards();\n        maxOpenCards.value = 2;\n      }, 1000);\n    }\n  }\n}\n\nfunction unflipCards() {\n  if (firstCardIndex.value !== null) gameCards.value[firstCardIndex.value].flipped = false;\n  if (secondCardIndex.value !== null) gameCards.value[secondCardIndex.value].flipped = false;\n  if (thirdCardIndex.value !== null) gameCards.value[thirdCardIndex.value].flipped = false;\n  resetGuesses();\n}\n\nfunction resetGuesses() {\n  count.value = 0;\n  firstCardIndex.value = null;\n  secondCardIndex.value = null;\n  thirdCardIndex.value = null;\n}\n\nasync function handlePerk(perkId) {\n  const success = await usePerk(perkId);\n  if (!success) return;\n  if (perkId === 'hint' && currentDefinition.value) {\n    const word = currentDefinition.value.word;\n    const indices = gameCards.value\n      .map((card, idx) => ({ card, idx }))\n      .filter(({ card }) => card.word === word && !card.matched && !card.flipped)\n      .map(({ idx }) => idx);\n    if (indices.length >= 2) {\n      gameCards.value[indices[0]].flipped = true;\n      gameCards.value[indices[1]].flipped = true;\n      setTimeout(() => {\n        checkMatch();\n      }, 500);\n    }\n  } else if (perkId === 'open_third_card') {\n    maxOpenCards.value = 3;\n  }\n}\n\nonMounted(() => {\n  createBoard();\n});\n</script>\n\n<style scoped>\n.memory-game {\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: var(--spacing-md);\n  width: 100%;\n}\n\n#definition {\n  font-size: 1.25rem;\n  margin: var(--spacing-lg) 0;\n  padding: var(--spacing-md);\n  background-color: var(--surface-color);\n  border-radius: var(--radius-md);\n  box-shadow: var(--shadow-sm);\n  color: var(--text-color);\n  line-height: 1.6;\n  border: 1px solid var(--border-color);\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n#game-board {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: var(--spacing-md);\n  padding: var(--spacing-md);\n  margin: 0 auto;\n  width: 100%;\n  max-width: 1000px;\n  perspective: 1000px;\n}\n\n#game-board :deep(.card) {\n  transform: rotate(-6deg);\n  transition: transform 0.3s ease;\n  aspect-ratio: 3/4;\n}\n\n#game-board :deep(.card:hover) {\n  transform: rotate(-6deg);\n}\n\n#game-board :deep(.card.flipped) {\n  transform: rotate(6deg);\n}\n\n#game-board :deep(.card-back) {\n  font-size: 1.1rem;\n  line-height: 1.4;\n  padding: var(--spacing-md);\n}\n\n#score {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-top: var(--spacing-lg);\n  color: var(--primary-color);\n}\n\n:deep(.dark) #definition {\n  background-color: var(--dark-surface-color);\n  color: var(--dark-text-color);\n  border-color: var(--dark-border-color);\n}\n\n@media (max-width: 768px) {\n  .memory-game {\n    padding: var(--spacing-sm);\n  }\n\n  #game-board {\n    grid-template-columns: repeat(4, 1fr);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-md);\n    width: 100%;\n  }\n\n  #definition {\n    font-size: 1.1rem;\n    margin: var(--spacing-md) var(--spacing-sm);\n    padding: var(--spacing-sm);\n  }\n\n  #game-board :deep(.card-back) {\n    font-size: 0.9rem;\n  }\n\n  #score {\n    font-size: 1.1rem;\n  }\n}\n</style>\n"],"names":["props","__props","emit","__emit","flippedState","shallowRef","flipped","matchedState","matched","uiStore","useUIStore","isDarkMode","watch","newVal","value","flush","cardClasses","computed","dark","cardStyles","transform","willChange","innerStyles","vocabularyStore","useVocabularyStore","usePerk","useGamePoints","score","ref","gameCards","currentDefinition","gameWords","availableDefinitions","count","firstCardIndex","secondCardIndex","thirdCardIndex","matchedCards","maxOpenCards","createBoard","filteredWords","words","filter","word","isActive","length","alert","sort","Math","random","slice","selectNextDefinition","cards","map","wordObj","pop","checkMatch","firstCard","secondCard","push","resetGuesses","setTimeout","unflipCards","thirdCard","forEach","card","async","handlePerk","perkId","indices","idx","onMounted","index"],"mappings":"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"}