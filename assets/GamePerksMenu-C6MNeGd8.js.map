{"version":3,"file":"GamePerksMenu-C6MNeGd8.js","sources":["../../src/composables/useGamePoints.js","../../src/components/game/GamePerksMenu.vue"],"sourcesContent":["import { usePointsStore } from '@/store/points';\n\n// Available perks and their configuration\nexport const PERKS = {\n  hint: {\n    id: 'hint',\n    name: 'Dica',\n    description: 'Revela uma letra ou dica adicional',\n    cost: 5,\n    icon: 'lightbulb'\n  },\n  extra_time: {\n    id: 'extra_time',\n    name: 'Tempo Extra',\n    description: 'Adiciona 30 segundos ao tempo do jogo',\n    cost: 3,\n    icon: 'clock'\n  },\n  skip: {\n    id: 'skip',\n    name: 'Pular',\n    description: 'Pula para a próxima palavra/questão',\n    cost: 8,\n    icon: 'forward'\n  }\n};\n\n// Point values for different game actions\nexport const POINTS_CONFIG = {\n  WORD_FOUND: 2,         // Finding a word in word search or completing in crosswords\n  GAME_COMPLETION: 10,   // Finishing any game\n  PERFECT_SCORE: 15,     // Perfect game (no mistakes, fast completion, etc)\n  TIME_BONUS: 5,         // Completing within time limit\n};\n\nexport function useGamePoints() {\n  const pointsStore = usePointsStore();\n\n  async function awardPoints(amount) {\n    try {\n      await pointsStore.addPoints(amount, true); // Add as free points\n      return true;\n    } catch (error) {\n      console.error('Failed to award points:', error);\n      return false;\n    }\n  }\n\n  async function usePerk(perkId) {\n    const perk = PERKS[perkId];\n    if (!perk) throw new Error('Invalid perk');\n\n    try {\n      await pointsStore.usePoints(perk.cost);\n      return true;\n    } catch (error) {\n      console.error('Failed to use perk:', error);\n      return false;\n    }\n  }\n\n  return {\n    PERKS,\n    POINTS_CONFIG,\n    awardPoints,\n    usePerk,\n    totalPoints: pointsStore.totalPoints,\n  };\n}","<template>\n  <div class=\"perks-menu\" v-if=\"isAuthenticated\">\n    <div class=\"perks-list\">\n      <div v-for=\"perk in perks\" :key=\"perk.id\" class=\"perk-item\">\n        <BaseButton\n          :variant=\"activePerks.value.has(perk.id) ? 'accent' : 'outline'\"\n          :icon=\"perk.icon\"\n          @click=\"handlePerkActivation(perk.id)\"\n          :disabled=\"perk.isDisabled\"\n          class=\"perk-button\"\n        >\n          <div class=\"perk-info\">\n            <span class=\"perk-name\">{{ perk.name }}</span>\n            <span class=\"perk-cost\">{{ perk.cost }} pontos</span>\n          </div>\n        </BaseButton>\n        <div class=\"perk-tooltip\">\n          {{ perk.description }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else class=\"login-prompt\">\n    <p>Faça login para usar perks no jogo</p>\n  </div>\n</template>\n\n<script setup>\nimport { computed, shallowRef, watch, onUnmounted } from 'vue';\nimport { useGamePoints, PERKS } from '@/composables/useGamePoints';\nimport { usePointsStore } from '@/store/points';\nimport { useAuthStore } from '@/store/auth';\nimport BaseButton from '../base/BaseButton.vue';\n\nconst props = defineProps({\n  availablePerks: {\n    type: Array,\n    default: () => ['hint', 'extra_time', 'skip']\n  }\n});\n\nconst emit = defineEmits(['perk-activated']);\n\nconst { usePerk } = useGamePoints();\nconst pointsStore = usePointsStore();\nconst authStore = useAuthStore();\n\n// Cache active perks state with shallowRef\nconst activePerks = shallowRef(new Set());\n\n// Cache and memo perks computation\nconst perks = computed(() => {\n  const totalPoints = pointsStore.totalPoints;\n  return props.availablePerks\n    .map(perkId => ({\n      ...PERKS[perkId],\n      isDisabled: totalPoints < PERKS[perkId].cost || activePerks.value.has(perkId)\n    }))\n    .filter(Boolean);\n});\n\n// Throttle perk activation with a 300ms delay\nlet activationTimeout;\nasync function handlePerkActivation(perkId) {\n  if (!authStore.isAuthenticated || activePerks.value.has(perkId)) return;\n  \n  if (activationTimeout) {\n    clearTimeout(activationTimeout);\n  }\n  \n  activationTimeout = setTimeout(async () => {\n    if (await usePerk(perkId)) {\n      activePerks.value.add(perkId);\n      emit('perk-activated', perkId);\n      \n      // Auto-remove perk from active state\n      setTimeout(() => {\n        activePerks.value.delete(perkId);\n      }, 5000);\n    }\n  }, 300);\n}\n\n// Clear any pending timeouts\nonUnmounted(() => {\n  if (activationTimeout) {\n    clearTimeout(activationTimeout);\n  }\n});\n\n// Cache auth state for better performance\nconst isAuthenticated = shallowRef(authStore.isAuthenticated);\nwatch(() => authStore.isAuthenticated, (newVal) => {\n  isAuthenticated.value = newVal;\n}, { flush: 'post' });\n</script>\n\n<style scoped>\n.perks-menu {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n  padding: var(--spacing-sm);\n}\n\n.perks-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-sm);\n}\n\n.perk-item {\n  position: relative;\n}\n\n.perk-button {\n  min-width: 120px;\n}\n\n.perk-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2px;\n}\n\n.perk-name {\n  font-weight: 500;\n}\n\n.perk-cost {\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n}\n\n.perk-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  background: var(--surface-color);\n  padding: var(--spacing-sm);\n  border-radius: var(--radius-sm);\n  border: 1px solid var(--border-color);\n  font-size: 0.9rem;\n  white-space: nowrap;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.2s ease;\n  z-index: 10;\n  pointer-events: none;\n}\n\n.perk-item:hover .perk-tooltip {\n  opacity: 1;\n  visibility: visible;\n  transform: translateX(-50%) translateY(-8px);\n}\n\n@media (max-width: 768px) {\n  .perks-list {\n    flex-direction: column;\n  }\n\n  .perk-button {\n    width: 100%;\n  }\n}\n\n.login-prompt {\n  text-align: center;\n  padding: var(--spacing-md);\n  color: var(--text-secondary);\n  background: var(--surface-color);\n  border: 1px solid var(--border-color);\n  border-radius: var(--radius-md);\n  width: 100%;\n}\n</style>"],"names":["PERKS","hint","id","name","description","cost","icon","extra_time","skip","POINTS_CONFIG","WORD_FOUND","GAME_COMPLETION","PERFECT_SCORE","TIME_BONUS","useGamePoints","pointsStore","usePointsStore","awardPoints","async","amount","addPoints","error","usePerk","perkId","perk","Error","usePoints","totalPoints","props","__props","emit","__emit","authStore","useAuthStore","activePerks","shallowRef","Set","perks","computed","availablePerks","map","isDisabled","value","has","filter","Boolean","activationTimeout","onUnmounted","clearTimeout","isAuthenticated","watch","newVal","flush","setTimeout","add","delete"],"mappings":"4IAGO,MAAMA,EAAQ,CACnBC,KAAM,CACJC,GAAI,OACJC,KAAM,OACNC,YAAa,qCACbC,KAAM,EACNC,KAAM,aAERC,WAAY,CACVL,GAAI,aACJC,KAAM,cACNC,YAAa,wCACbC,KAAM,EACNC,KAAM,SAERE,KAAM,CACJN,GAAI,OACJC,KAAM,QACNC,YAAa,sCACbC,KAAM,EACNC,KAAM,YAKGG,EAAgB,CAC3BC,WAAY,EACZC,gBAAiB,GACjBC,cAAe,GACfC,WAAY,GAGP,SAASC,IACd,MAAMC,EAAcC,IAyBb,MAAA,CACLhB,QACAS,gBACAQ,YA1BFC,eAA2BC,GACrB,IAEK,aADDJ,EAAYK,UAAUD,GAAQ,IAC7B,CACR,OAAQE,GAEA,OAAA,CACb,CACA,EAmBIC,QAjBFJ,eAAuBK,GACf,MAAAC,EAAOxB,EAAMuB,GACnB,IAAKC,EAAY,MAAA,IAAIC,MAAM,gBAEvB,IAEK,aADDV,EAAYW,UAAUF,EAAKnB,OAC1B,CACR,OAAQgB,GAEA,OAAA,CACb,CACA,EAOIM,YAAaZ,EAAYY,YAE7B,yUClCA,MAAMC,EAAQC,EAORC,EAAOC,GAEPT,QAAEA,GAAYR,IACdC,EAAcC,IACdgB,EAAYC,IAGZC,EAAcC,EAAe,IAAAC,KAG7BC,EAAQC,GAAS,KACrB,MAAMX,EAAcZ,EAAYY,YACzB,OAAAC,EAAMW,eACVC,KAAejB,IAAA,IACXvB,EAAMuB,GACTkB,WAAYd,EAAc3B,EAAMuB,GAAQlB,MAAQ6B,EAAYQ,MAAMC,IAAIpB,OAEvEqB,OAAOC,QAAO,IAIf,IAAAC,EAsBJC,GAAY,KACND,GACFE,aAAaF,EACjB,IAIM,MAAAG,EAAkBd,EAAWH,EAAUiB,wBAC7CC,GAAM,IAAMlB,EAAUiB,kBAAkBE,IACtCF,EAAgBP,MAAQS,CAAA,GACvB,CAAEC,MAAO,2MA/BZlC,eAAoCK,GAC7BS,EAAUiB,kBAAmBf,EAAYQ,MAAMC,IAAIpB,KAEpDuB,GACFE,aAAaF,GAGfA,EAAoBO,YAAWnC,gBACnBI,EAAQC,KACJW,EAAAQ,MAAMY,IAAI/B,GACtBO,EAAK,iBAAkBP,GAGvB8B,YAAW,KACGnB,EAAAQ,MAAMa,OAAOhC,EAAM,GAC9B,KACT,GACK,KACL"}