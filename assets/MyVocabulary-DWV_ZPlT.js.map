{"version":3,"file":"MyVocabulary-DWV_ZPlT.js","sources":["../../src/views/MyVocabulary.vue"],"sourcesContent":["<template>\n  <div class=\"my-vocabulary\" :class=\"{ dark: isDarkMode }\">\n    <div class=\"vocab-header\">\n      <h1>Meu Vocabulário</h1>\n      <div class=\"search-word\">\n        <BaseInput v-model=\"searchTerm\" placeholder=\"Buscar palavra ou definição...\" icon=\"search\"\n          @keyup.enter=\"searchWords\" />\n      </div>\n      <div class=\"mobile-controls-toggle\" @click=\"toggleMobileControls\">\n        <span>Controles</span>\n        <font-awesome-icon :icon=\"mobileControlsExpanded ? 'chevron-up' : 'chevron-down'\" class=\"arrow\"\n          :class=\"{ up: mobileControlsExpanded }\" />\n      </div>\n      <div class=\"vocab-controls\" :class=\"{ expanded: mobileControlsExpanded }\">\n        <div class=\"filters\">\n          <div class=\"filter-buttons\">\n            <BaseButton variant=\"primary\" icon=\"plus\" @click=\"openAddWordModal\">\n              Adicionar\n            </BaseButton>\n            <BaseButton variant=\"outline\" :icon=\"onlyActive ? 'eye' : 'eye-slash'\" @click=\"toggleOnlyActive\"\n              :class=\"{ active: onlyActive, toggle: true }\">\n              {{ onlyActive ? \"Todos\" : \"Apenas ativos\" }}\n            </BaseButton>\n            <BaseButton variant=\"outline\" icon=\"highlighter\" @click=\"toggleHighlightDuplicates\"\n              :class=\"{ active: highlightDuplicates }\">\n              {{ highlightDuplicates ? \"Remover Destaque\" : \"Destacar Duplicatas\" }}\n            </BaseButton>\n          </div>\n        </div>\n        <div class=\"actions\">\n          <BaseButton variant=\"outline\" icon=\"check-square\" @click=\"toggleSelectionMode\"\n            :class=\"{ active: selectionMode }\">\n            {{ selectionMode ? \"Cancelar\" : \"Selecionar Itens\" }}\n          </BaseButton>\n          <BaseButton variant=\"outline\" icon=\"check\" @click=\"selectAllWords\" v-if=\"selectionMode\">\n            Selecionar Todos\n          </BaseButton>\n          <BaseButton variant=\"outline\" icon=\"times\" @click=\"deselectAllWords\" v-if=\"selectionMode\">\n            Desselecionar Todos\n          </BaseButton>\n        </div>\n        <SelectorsComponent />\n      </div>\n      <div class=\"results-info\">\n        <p class=\"results-count\">{{ displayedWords.length }} termos encontrados</p>\n      </div>\n    </div>\n\n    <div class=\"vocabulary-list\">\n      <div v-for=\"(word, index) in displayedWords\" :key=\"word.word + index\" class=\"term-item\" :class=\"{\n        duplicate: highlightDuplicates && duplicateMap[wordKey(word)] > 1,\n        expanded: isExpanded(index),\n        selected: selectedWords.has(word)\n      }\" @click=\"!editingIndices.includes(index) && toggleExpansion(index)\">\n        <div class=\"card-header\">\n          <h2>{{ word.word }}</h2>\n          <div class=\"card-badges\">\n            <span class=\"badge difficulty-badge\" :class=\"'difficulty-' + word.difficulty\">\n              {{ formatDifficulty(word.difficulty) }}\n            </span>\n            <span class=\"badge active-badge\" :class=\"{ 'is-active': word.isActive }\">\n              {{ word.isActive ? 'Ativo' : 'Inativo' }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"card-details\" v-if=\"isExpanded(index)\">\n          <p class=\"clue\">{{ word.clue }}</p>\n          <div class=\"specialties-tags\">\n            <span v-for=\"specIndex in word.specialties\" :key=\"specIndex\" class=\"specialty-tag\">\n              {{ vocabularyStore.specialties[specIndex] }}\n            </span>\n          </div>\n          <div class=\"card-actions\">\n            <BaseButton variant=\"outline\" icon=\"edit\" @click.stop=\"toggleEditMode(index)\" size=\"sm\" />\n            <BaseButton variant=\"outline\" icon=\"trash\" @click.stop=\"deleteWord(index)\" size=\"sm\" />\n            <BaseButton variant=\"outline\" :icon=\"word.isActive ? 'eye' : 'eye-slash'\" @click.stop=\"toggleActive(word)\"\n              size=\"sm\" />\n            <BaseButton variant=\"outline\" icon=\"check-square\" @click.stop=\"toggleWordSelection(word, $event)\" size=\"sm\"\n              :class=\"{ active: selectedWords.has(word) }\" v-if=\"selectionMode\" />\n          </div>\n        </div>\n\n        <div class=\"edit-form\" v-if=\"editingIndices.includes(index)\">\n          <BaseInput v-model=\"editData[index].word\" label=\"Palavra\" required />\n          <BaseInput v-model=\"editData[index].clue\" label=\"Dica\" type=\"textarea\" required />\n          <BaseSelect v-model=\"editData[index].difficulty\" :options=\"difficultyOptions\" label=\"Dificuldade\" required />\n          <div class=\"specialties-select\">\n            <label>Especialidades:</label>\n            <div class=\"specialties-grid\">\n              <button v-for=\"(spec, i) in vocabularyStore.specialties\" :key=\"i\" type=\"button\" class=\"specialty-button\"\n                :class=\"{ selected: editData[index].specialties.includes(i) }\" @click=\"toggleEditSpecialty(index, i)\">\n                {{ spec }}\n              </button>\n            </div>\n          </div>\n          <div class=\"edit-actions\">\n            <BaseButton variant=\"primary\" icon=\"save\" @click=\"saveEdit(index)\">\n              Salvar\n            </BaseButton>\n            <BaseButton variant=\"outline\" icon=\"times\" @click=\"cancelEdit(index)\">\n              Cancelar\n            </BaseButton>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <BaseModal v-model=\"showAddModal\" title=\"Adicionar Nova Palavra\">\n      <form @submit.prevent=\"validateAndAddWord\" class=\"add-word-form\">\n        <div class=\"form-group\">\n          <BaseInput v-model=\"newWord.word\" label=\"Palavra\" required :error=\"formErrors.word\"\n            @input=\"validateField('word')\" placeholder=\"Digite a palavra médica\" />\n          <BaseInput v-model=\"newWord.clue\" label=\"Dica\" type=\"textarea\" required :error=\"formErrors.clue\"\n            @input=\"validateField('clue')\" placeholder=\"Digite uma dica clara e concisa\" />\n        </div>\n        <div class=\"difficulty-section\">\n          <BaseSelect v-model=\"newWord.difficulty\" :options=\"difficultyOptions\" label=\"Dificuldade\" required\n            :error=\"formErrors.difficulty\" @change=\"validateField('difficulty')\" />\n          <p class=\"field-hint\">Escolha o nível de dificuldade apropriado</p>\n        </div>\n\n        <div class=\"specialties-section\">\n          <label>Especialidades:</label>\n          <p class=\"field-hint\" :class=\"{ 'error-text': formErrors.specialties }\">\n            Selecione uma ou mais especialidades relacionadas\n          </p>\n          <div class=\"specialties-grid\">\n            <button v-for=\"(spec, i) in vocabularyStore.specialties\" :key=\"i\" type=\"button\" class=\"specialty-button\"\n              :class=\"{\n                selected: newWord.specialties.includes(i),\n                'with-error': formErrors.specialties\n              }\" @click=\"toggleSpecialty(i)\">\n              {{ spec }}\n            </button>\n          </div>\n        </div>\n\n\n        <div v-if=\"isPreviewAvailable\" class=\"word-preview\">\n          <h4>Pré-visualização</h4>\n          <div class=\"preview-card\">\n            <h3>{{ newWord.word }}</h3>\n            <p class=\"preview-clue\">{{ newWord.clue }}</p>\n            <div class=\"preview-tags\">\n              <span v-for=\"specIndex in newWord.specialties\" :key=\"specIndex\" class=\"preview-tag\">\n                {{ vocabularyStore.specialties[specIndex] }}\n              </span>\n              <span class=\"preview-difficulty\" :class=\"'difficulty-' + newWord.difficulty\">\n                {{ formatDifficulty(newWord.difficulty) }}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"modal-actions\">\n          <BaseButton type=\"submit\" variant=\"primary\" icon=\"plus\" :disabled=\"!isFormValid\">\n            Adicionar\n          </BaseButton>\n          <BaseButton type=\"button\" variant=\"outline\" icon=\"times\" @click=\"closeAddWordModal\">\n            Cancelar\n          </BaseButton>\n        </div>\n      </form>\n    </BaseModal>\n\n    <!-- Loading Overlay -->\n    <transition name=\"fade\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-content\">\n          <font-awesome-icon icon=\"circle-notch\" size=\"2x\" class=\"loading-spinner\" />\n          <p>{{ getLoadingMessage }}</p>\n        </div>\n      </div>\n    </transition>\n\n    <!-- Batch Actions Bar -->\n    <div v-if=\"selectionMode && selectedWords.size > 0\" class=\"batch-actions-bar\">\n      <div class=\"selected-count\">\n        <font-awesome-icon icon=\"check-square\" />\n        <span>{{ selectedWords.size }} selecionados</span>\n      </div>\n      <BaseButton variant=\"outline\" icon=\"check\" @click=\"activateSelectedWords\">\n        Ativar Selecionados\n      </BaseButton>\n      <BaseButton variant=\"outline\" icon=\"times\" @click=\"deactivateSelectedWords\">\n        Desativar Selecionados\n      </BaseButton>\n      <BaseButton variant=\"accent\" icon=\"trash\" @click=\"deleteSelectedWords\">\n        Excluir Selecionados\n      </BaseButton>\n    </div>\n\n    <button v-show=\"showScrollTop\" @click=\"scrollToTop\" class=\"scroll-top-button\" title=\"Voltar ao topo\">\n      <font-awesome-icon icon=\"arrow-up\" />\n    </button>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, reactive, onMounted, onUnmounted } from \"vue\";\nimport { useVocabularyStore } from \"@/store/vocabulary\";\nimport { useSettingsStore } from \"@/store/settings\";\nimport SelectorsComponent from \"@/components/SelectorsComponent.vue\";\nimport { saveWordsToLocalStorage } from \"@/data/vocabularyData\";\nimport BaseButton from '@/components/base/BaseButton.vue';\nimport BaseInput from '@/components/base/BaseInput.vue';\nimport BaseSelect from '@/components/base/BaseSelect.vue';\nimport BaseModal from '@/components/base/BaseModal.vue';\nimport { useUIStore } from \"@/store/ui\";\n\nconst uiStore = useUIStore();\nconst isDarkMode = computed(() => uiStore.isDarkMode);\n\nconst vocabularyStore = useVocabularyStore();\nconst settingsStore = useSettingsStore();\n\nconst highlightDuplicates = ref(false);\nconst onlyActive = ref(false);\nconst searchTerm = ref(\"\");\nconst showAddModal = ref(false);\nconst selectionMode = ref(false);\nconst selectedWords = ref(new Set());\n\nconst expandedIndices = ref([]);\nconst editingIndices = ref([]);\nconst editData = reactive({});\n\nconst isLoading = ref(false);\nconst actionInProgress = ref('');\n\nconst showScrollTop = ref(false);\nconst mobileControlsExpanded = ref(false);\n\nonMounted(() => {\n  window.addEventListener('scroll', handleScroll);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('scroll', handleScroll);\n});\n\nfunction handleScroll() {\n  showScrollTop.value = window.scrollY > 300;\n}\n\nfunction scrollToTop() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n\nfunction toggleMobileControls() {\n  mobileControlsExpanded.value = !mobileControlsExpanded.value;\n}\n\nfunction normalize(str) {\n  return str\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .toLowerCase();\n}\n\nconst duplicateMap = computed(() => {\n  const counts = {};\n  displayedWords.value.forEach((word) => {\n    const key = normalize(word.word);\n    counts[key] = (counts[key] || 0) + 1;\n  });\n  return counts;\n});\n\nconst displayedWords = computed(() => {\n  let words = vocabularyStore.words;\n  if (settingsStore.selectedSpecialty !== \"all\") {\n    const spec = parseInt(settingsStore.selectedSpecialty);\n    words = words.filter((w) => w.specialties.includes(spec));\n  }\n  if (settingsStore.selectedDifficulty !== \"all\") {\n    const diff = parseInt(settingsStore.selectedDifficulty);\n    words = words.filter((w) => w.difficulty === diff);\n  }\n  if (onlyActive.value) {\n    words = words.filter((w) => w.isActive);\n  }\n  if (searchTerm.value.trim() !== \"\") {\n    const term = searchTerm.value.trim().toLowerCase();\n    words = words.filter(\n      (w) =>\n        w.word.toLowerCase().includes(term) ||\n        w.clue.toLowerCase().includes(term)\n    );\n  }\n  return words.sort((a, b) => a.word.localeCompare(b.word));\n});\n\nfunction toggleExpansion(index) {\n  const pos = expandedIndices.value.indexOf(index);\n  if (pos === -1) {\n    expandedIndices.value.push(index);\n  } else {\n    expandedIndices.value.splice(pos, 1);\n  }\n}\n\nfunction isExpanded(index) {\n  return expandedIndices.value.includes(index);\n}\n\nfunction toggleHighlightDuplicates() {\n  highlightDuplicates.value = !highlightDuplicates.value;\n}\n\nfunction removeDuplicates() {\n  if (\n    confirm(\n      \"Deseja realmente remover todas as duplicatas, mantendo apenas uma instância de cada palavra?\"\n    )\n  ) {\n    const unique = {};\n    vocabularyStore.words.forEach((item) => {\n      const key = normalize(item.word);\n      if (!unique[key]) {\n        unique[key] = item;\n      }\n    });\n    vocabularyStore.words = Object.values(unique);\n    saveWordsToLocalStorage(vocabularyStore.words);\n  }\n}\n\nfunction toggleOnlyActive() {\n  onlyActive.value = !onlyActive.value;\n}\n\nfunction openAddWordModal() {\n  showAddModal.value = true;\n}\n\nfunction closeAddWordModal() {\n  showAddModal.value = false;\n}\n\nconst newWord = reactive({\n  word: \"\",\n  clue: \"\",\n  specialties: [],\n  difficulty: null,\n});\n\nconst formErrors = reactive({\n  word: null,\n  clue: null,\n  specialties: null,\n  difficulty: null,\n});\n\nconst isFormValid = computed(() => {\n  return !Object.values(formErrors).some(error => error !== null);\n});\n\nconst isPreviewAvailable = computed(() => {\n  return newWord.word.trim() && newWord.clue.trim() && newWord.specialties.length > 0 && newWord.difficulty;\n});\n\nfunction validateField(field) {\n  switch (field) {\n    case 'word':\n      formErrors.word = newWord.word.trim() ? null : 'A palavra é obrigatória.';\n      break;\n    case 'clue':\n      formErrors.clue = newWord.clue.trim() ? null : 'A dica é obrigatória.';\n      break;\n    case 'specialties':\n      formErrors.specialties = newWord.specialties.length > 0 ? null : 'Selecione pelo menos uma especialidade.';\n      break;\n    case 'difficulty':\n      formErrors.difficulty = newWord.difficulty ? null : 'Selecione um nível de dificuldade.';\n      break;\n    default:\n      break;\n  }\n}\n\nasync function validateAndAddWord() {\n  validateField('word');\n  validateField('clue');\n  validateField('specialties');\n  validateField('difficulty');\n\n  if (!isFormValid.value) {\n    alert(\"Preencha todos os campos corretamente.\");\n    return;\n  }\n\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'adding';\n\n    const exists = vocabularyStore.words.some(\n      (item) => normalize(item.word) === newWord.word.trim().toLowerCase()\n    );\n    if (\n      exists &&\n      !confirm(\"A palavra já existe. Deseja adicionar outra instância?\")\n    ) {\n      return;\n    }\n    const newWordObj = {\n      word: newWord.word.trim(),\n      clue: newWord.clue.trim(),\n      specialties: [...newWord.specialties],\n      difficulty: newWord.difficulty,\n      isActive: true,\n    };\n    vocabularyStore.words.push(newWordObj);\n    await saveWordsToLocalStorage(vocabularyStore.words);\n    closeAddWordModal();\n    newWord.word = \"\";\n    newWord.clue = \"\";\n    newWord.specialties = [];\n    newWord.difficulty = null;\n  } catch (error) {\n    console.error('Error adding word:', error);\n    alert('Ocorreu um erro ao adicionar a palavra. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nfunction toggleEditMode(index) {\n  if (editingIndices.value.includes(index)) {\n    cancelEdit(index);\n  } else {\n    // Ensure the item is expanded when entering edit mode\n    if (!isExpanded(index)) {\n      toggleExpansion(index);\n    }\n    editingIndices.value.push(index);\n    editData[index] = JSON.parse(JSON.stringify(displayedWords.value[index]));\n  }\n}\n\nasync function saveEdit(index) {\n  const edited = editData[index];\n  if (!edited.word.trim() || !edited.clue.trim() || !edited.difficulty || edited.specialties.length === 0) {\n    alert(\"Preencha todos os campos corretamente.\");\n    return;\n  }\n\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'editing';\n\n    const idx = vocabularyStore.words.findIndex(\n      (w) => w.word === displayedWords.value[index].word\n    );\n    if (idx !== -1) {\n      vocabularyStore.words[idx] = { ...edited };\n      await saveWordsToLocalStorage(vocabularyStore.words);\n    }\n    // Clean up edit mode\n    cancelEdit(index);\n  } catch (error) {\n    console.error('Error saving edit:', error);\n    alert('Ocorreu um erro ao salvar as alterações. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nfunction cancelEdit(index) {\n  const pos = editingIndices.value.indexOf(index);\n  if (pos !== -1) {\n    editingIndices.value.splice(pos, 1);\n    delete editData[index]; // Clean up edit data\n  }\n}\n\nasync function toggleActive(word) {\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'toggling';\n    word.isActive = !word.isActive;\n    await saveWordsToLocalStorage(vocabularyStore.words);\n  } catch (error) {\n    console.error('Error toggling active state:', error);\n    word.isActive = !word.isActive; // Revert on error\n    alert('Ocorreu um erro ao alterar o estado. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nfunction searchWords() {\n  // The searchTerm is reactive, so displayedWords updates automatically.\n}\n\nfunction formatSpecialties(specialtiesArray) {\n  return specialtiesArray.map((i) => vocabularyStore.specialties[i]).join(\", \");\n}\n\nfunction formatDifficulty(diff) {\n  const map = { 1: \"Fácil\", 2: \"Média\", 3: \"Difícil\" };\n  return map[diff] || \"Desconhecida\";\n}\n\nfunction wordKey(word) {\n  return normalize(word.word);\n}\n\nconst difficultyOptions = [\n  { value: 1, label: 'Fácil' },\n  { value: 2, label: 'Média' },\n  { value: 3, label: 'Difícil' }\n];\n\nconst getLoadingMessage = computed(() => {\n  switch (actionInProgress.value) {\n    case 'adding':\n      return 'Adicionando palavra...';\n    case 'editing':\n      return 'Salvando alterações...';\n    case 'toggling':\n      return 'Atualizando estado...';\n    case 'deleting':\n      return 'Excluindo palavras...';\n    default:\n      return 'Carregando...';\n  }\n});\n\nfunction toggleSelectionMode() {\n  selectionMode.value = !selectionMode.value;\n  if (!selectionMode.value) {\n    selectedWords.value.clear();\n  }\n}\n\nfunction toggleWordSelection(word, event) {\n  event.stopPropagation();\n  if (selectedWords.value.has(word)) {\n    selectedWords.value.delete(word);\n  } else {\n    selectedWords.value.add(word);\n  }\n}\n\nfunction selectAllWords() {\n  displayedWords.value.forEach(word => {\n    selectedWords.value.add(word);\n  });\n}\n\nfunction deselectAllWords() {\n  selectedWords.value.clear();\n}\n\nasync function activateSelectedWords() {\n  if (!selectedWords.value.size) return;\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'toggling';\n    for (const word of selectedWords.value) {\n      word.isActive = true;\n    }\n    await saveWordsToLocalStorage(vocabularyStore.words);\n    selectedWords.value.clear();\n  } catch (error) {\n    console.error('Error activating words:', error);\n    alert('Ocorreu um erro ao ativar as palavras. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nasync function deactivateSelectedWords() {\n  if (!selectedWords.value.size) return;\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'toggling';\n    for (const word of selectedWords.value) {\n      word.isActive = false;\n    }\n    await saveWordsToLocalStorage(vocabularyStore.words);\n    selectedWords.value.clear();\n  } catch (error) {\n    console.error('Error deactivating words:', error);\n    alert('Ocorreu um erro ao desativar as palavras. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nasync function deleteSelectedWords() {\n  if (!selectedWords.value.size) return;\n  if (!confirm('Deseja realmente excluir todas as palavras selecionadas?')) return;\n\n  try {\n    isLoading.value = true;\n    actionInProgress.value = 'deleting';\n    vocabularyStore.words = vocabularyStore.words.filter(word => !selectedWords.value.has(word));\n    await saveWordsToLocalStorage(vocabularyStore.words);\n    selectedWords.value.clear();\n  } catch (error) {\n    console.error('Error deleting words:', error);\n    alert('Ocorreu um erro ao excluir as palavras. Tente novamente.');\n  } finally {\n    isLoading.value = false;\n    actionInProgress.value = '';\n  }\n}\n\nfunction toggleSpecialty(index) {\n  const pos = newWord.specialties.indexOf(index);\n  if (pos === -1) {\n    newWord.specialties.push(index);\n  } else {\n    newWord.specialties.splice(pos, 1);\n  }\n  validateField('specialties');\n}\n\nfunction toggleEditSpecialty(index, specialtyIndex) {\n  const pos = editData[index].specialties.indexOf(specialtyIndex);\n  if (pos === -1) {\n    editData[index].specialties.push(specialtyIndex);\n  } else {\n    editData[index].specialties.splice(pos, 1);\n  }\n}\n</script>\n\n<style scoped>\n.my-vocabulary {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-width: 900px;\n  width: 100%;\n  margin: 0 auto;\n  padding: var(--spacing-md);\n  gap: var(--spacing-md);\n  background-color: var(--background-color);\n}\n\n.my-vocabulary.dark {\n  background-color: var(--dark-background-color);\n}\n\n.vocab-header {\n  position: sticky;\n  top: 0;\n  /* background-color: var(--background-color); */\n  padding: var(--spacing-md);\n  z-index: 99;\n  border-bottom: 1px solid var(--border-color);\n  margin-bottom: var(--spacing-lg);\n}\n\n:deep(.dark) .vocab-header {\n  background-color: var(--dark-background-color);\n  border-color: var(--dark-border-color);\n}\n\n.vocab-controls {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  width: 100%;\n  position: relative;\n}\n\n.mobile-controls-toggle {\n  display: none;\n  align-items: center;\n  gap: var(--spacing-sm);\n  padding: var(--spacing-sm);\n  cursor: pointer;\n  font-weight: 500;\n  color: var(--text-color);\n  margin-bottom: var(--spacing-sm);\n}\n\n:deep(.dark) .mobile-controls-toggle {\n  color: var(--dark-text-color);\n}\n\n.mobile-controls-toggle .arrow {\n  transition: transform 0.3s ease;\n}\n\n.mobile-controls-toggle .arrow.up {\n  transform: rotate(180deg);\n}\n\n.filters {\n  position: relative;\n  display: flex;\n  gap: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n}\n\n.filter-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-sm);\n  justify-content: center;\n}\n\n.filter-buttons button {\n  flex: 1;\n  min-width: 150px;\n  max-width: 250px;\n}\n\n.actions {\n  display: flex;\n  gap: var(--spacing-md);\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.search-word {\n  flex: 1;\n  margin-bottom: var(--spacing-md);\n}\n\n.results-info {\n  text-align: center;\n}\n\n.results-count {\n  font-size: 1rem;\n  color: var(--text-secondary);\n}\n\n.vocabulary-list {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  overflow-y: auto;\n  position: relative;\n  padding-bottom: calc(80px + var(--spacing-xl));\n  padding-top: 3px;\n}\n\n.term-item {\n  padding: var(--spacing-md);\n  border: 1px solid var(--border-color);\n  border-radius: var(--radius-md);\n  transition: all 0.3s ease, height 0.3s ease, padding 0.3s ease;\n  transform-origin: top;\n  animation: slide-in 0.3s ease-out;\n  cursor: pointer;\n  background-color: var(--surface-color);\n  box-shadow: var(--shadow-sm);\n  opacity: 0.95;\n}\n\n@keyframes slide-in {\n  from {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.term-item:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-md);\n  opacity: 1;\n  background-color: var(--background-color);\n}\n\n.term-item.expanded {\n  transform: translateY(-1px);\n  box-shadow: var(--shadow-md);\n  background-color: var(--background-color);\n  border-color: var(--primary-color);\n}\n\n.term-item.selected {\n  border-color: var(--primary-color);\n  background-color: rgba(52, 152, 219, 0.1);\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.card-badges {\n  display: flex;\n  gap: var(--spacing-sm);\n}\n\n.badge {\n  padding: 4px 8px;\n  border-radius: var(--radius-sm);\n  font-size: 0.8rem;\n  font-weight: 500;\n  transition: all 0.2s ease;\n}\n\n.badge:hover {\n  transform: translateY(-2px);\n}\n\n\n.difficulty-1 {\n  color: #2ecc71;\n}\n\n.difficulty-2 {\n  color: #f1c40f;\n}\n\n.difficulty-3 {\n  color: #e74c3c;\n}\n\n:deep(.dark) .difficulty-1 {\n  color: #4ade80;\n}\n\n:deep(.dark) .difficulty-2 {\n  color: #fbbf24;\n}\n\n:deep(.dark) .difficulty-3 {\n  color: #fb7185;\n}\n\n:deep(.dark) .term-item {\n  background-color: var(--dark-surface-color);\n  border-color: var(--dark-border-color);\n  color: var(--dark-text-color);\n}\n\n:deep(.dark) .term-item:hover {\n  background-color: var(--dark-hover-color);\n}\n\n:deep(.dark) .term-item.expanded {\n  background-color: var(--dark-background-color);\n}\n\n:deep(.dark) .clue {\n  color: var(--dark-text-color);\n}\n\n:deep(.dark) .specialty-tag {\n  background-color: var(--dark-primary-color);\n  color: var(--dark-text-color);\n}\n\n:deep(.dark) .active-badge {\n  background-color: var(--dark-surface-color);\n  color: var(--dark-text-secondary);\n}\n\n:deep(.dark) .active-badge.is-active {\n  color: #4ade80;\n}\n\n:deep(.dark) .results-count {\n  color: var(--dark-text-secondary);\n}\n\n:deep(.dark) .field-hint {\n  color: var(--dark-text-secondary);\n}\n\n:deep(.dark) .duplicate {\n  border-color: var(--dark-accent-color);\n  background-color: rgba(252, 129, 129, 0.1);\n}\n\n:deep(.dark) .loading-content {\n  background-color: var(--dark-surface-color);\n  color: var(--dark-text-color);\n  border: 1px solid var(--dark-border-color);\n}\n\n.active-badge.is-active {\n  color: #2ecc71;\n}\n\n.card-details {\n  margin-top: var(--spacing-md);\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  animation: fade-in 0.3s ease-out;\n  position: relative;\n  padding: var(--spacing-md);\n  background-color: var(--surface-color);\n  border-radius: var(--radius-sm);\n  border: 1px solid var(--border-color);\n}\n\n@keyframes fade-in {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n.clue {\n  font-size: 1.1rem;\n  line-height: 1.5;\n  color: var(--text-secondary);\n  text-align: start;\n}\n\n.specialties-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-sm);\n}\n\n.specialty-tag {\n  padding: 4px 8px;\n  background-color: var(--primary-color);\n  color: white;\n  border-radius: var(--radius-sm);\n  font-size: 0.9rem;\n  animation: tag-pop 0.2s ease-out;\n}\n\n@keyframes tag-pop {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.card-actions {\n  display: flex;\n  gap: var(--spacing-sm);\n  justify-content: flex-end;\n}\n\n.card-actions button {\n  transition: all 0.2s ease;\n}\n\n.card-actions button:hover {\n  transform: scale(1.1);\n}\n\n.edit-form {\n  margin-top: var(--spacing-md);\n  padding-top: var(--spacing-md);\n  border-top: 1px solid var(--border-color);\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n  animation: fade-in 0.3s ease-out;\n}\n\n.edit-actions {\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  gap: 1rem;\n}\n\n.specialties-select {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.specialties-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: var(--spacing-sm);\n}\n\n.specialty-button {\n  cursor: pointer;\n  border: 1px solid var(--border-color);\n  border-radius: var(--radius-sm);\n  padding: var(--spacing-sm);\n  font-size: 0.9rem;\n  font-weight: 500;\n  text-align: center;\n  transition: all 0.2s ease;\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.specialty-button:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-sm);\n  border-color: var(--primary-color);\n}\n\n.specialty-button.selected {\n  background-color: var(--primary-color);\n  border-color: var(--primary-color);\n  color: white;\n}\n\n:deep(.dark) .specialty-button {\n  background-color: var(--dark-surface-color);\n  border-color: var(--dark-border-color);\n  color: var(--text-color);\n}\n\n:deep(.dark) .specialty-button:hover {\n  border-color: var(--dark-primary-color);\n}\n\n:deep(.dark) .specialty-button.selected {\n  background-color: var(--dark-primary-color);\n  border-color: var(--dark-primary-color);\n  color: white;\n}\n\n.duplicate {\n  border-color: var(--accent-color);\n  background-color: rgba(255, 99, 71, 0.1);\n}\n\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n  animation: fade-in 0.2s ease-out;\n  backdrop-filter: blur(2px);\n}\n\n.loading-content {\n  background: var(--surface-color);\n  padding: var(--spacing-lg);\n  border-radius: var(--radius-md);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: var(--spacing-md);\n  box-shadow: var(--shadow-lg);\n  min-width: 200px;\n  text-align: center;\n  animation: pop-in 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n\n@keyframes pop-in {\n  from {\n    transform: scale(0.8);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n.loading-spinner {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n:deep(.dark) .loading-content {\n  background-color: var(--dark-surface-color);\n  color: var(--dark-text-color);\n  border: 1px solid var(--dark-border-color);\n}\n\n.batch-actions-bar {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: var(--surface-color);\n  padding: var(--spacing-md);\n  box-shadow: var(--shadow-lg);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: var(--spacing-md);\n  z-index: 100;\n  animation: slide-up 0.3s ease-out;\n  border-top: 1px solid var(--border-color);\n  flex-wrap: wrap;\n}\n\n@keyframes slide-up {\n  from {\n    transform: translateY(100%);\n  }\n\n  to {\n    transform: translateY(0);\n  }\n}\n\n:deep(.dark) .batch-actions-bar {\n  background-color: var(--dark-surface-color);\n  border-color: var(--dark-border-color);\n}\n\n.batch-actions-bar .selected-count {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-sm);\n  color: var(--text-secondary);\n}\n\n@media (max-width: 768px) {\n  .my-vocabulary {\n    padding: var(--spacing-sm);\n  }\n\n  .vocab-header {\n    padding: var(--spacing-xs);\n    margin-bottom: var(--spacing-md);\n  }\n\n  .vocab-controls {\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.3s ease-out;\n    margin: 0;\n    opacity: 0;\n  }\n\n  .vocab-controls.expanded {\n    max-height: 1000px;\n    opacity: 1;\n    margin-bottom: var(--spacing-md);\n  }\n\n  .mobile-controls-toggle {\n    display: flex;\n  }\n\n  .filters {\n    flex-direction: column;\n    gap: var(--spacing-sm);\n    margin-bottom: var(--spacing-sm);\n  }\n\n  .filter-buttons {\n    grid-template-columns: repeat(3, 1fr);\n    display: grid;\n    width: 100%;\n  }\n\n  .filter-buttons button {\n    min-width: unset;\n    max-width: unset;\n    padding: var(--spacing-xs) var(--spacing-sm);\n    font-size: 0.9rem;\n  }\n\n  .search-word {\n    margin-bottom: var(--spacing-sm);\n  }\n\n  .term-item {\n    padding: var(--spacing-sm);\n  }\n\n  .card-header {\n    flex-direction: column;\n    gap: var(--spacing-xs);\n  }\n\n  .card-header h2 {\n    font-size: 1.1rem;\n    margin: 0;\n  }\n\n  .card-badges {\n    flex-wrap: wrap;\n  }\n\n  .badge {\n    font-size: 0.75rem;\n    padding: 2px 6px;\n  }\n\n  .card-details {\n    padding: var(--spacing-sm);\n    gap: var(--spacing-sm);\n    margin-top: var(--spacing-sm);\n  }\n\n  .clue {\n    font-size: 1rem;\n  }\n\n  .specialties-tags {\n    flex-wrap: wrap;\n    gap: var(--spacing-xs);\n  }\n\n  .specialty-tag {\n    font-size: 0.8rem;\n    padding: 2px 6px;\n  }\n\n  .card-actions {\n    flex-wrap: wrap;\n  }\n\n  .edit-form {\n    gap: var(--spacing-sm);\n    padding-top: var(--spacing-sm);\n    margin-top: var(--spacing-sm);\n  }\n\n  .specialties-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .specialty-button {\n    padding: var(--spacing-xs);\n    font-size: 0.85rem;\n    min-height: 36px;\n  }\n\n  .batch-actions-bar {\n    padding: var(--spacing-sm);\n    gap: var(--spacing-sm);\n    flex-direction: column;\n  }\n\n  .batch-actions-bar button {\n    width: 100%;\n  }\n\n  .selected-count {\n    text-align: center;\n    width: 100%;\n    justify-content: center;\n    padding: var(--spacing-xs) 0;\n    border-bottom: 1px solid var(--border-color);\n  }\n}\n\n.add-word-form {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-lg);\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-md);\n}\n\n.specialties-section,\n.difficulty-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-sm);\n}\n\n.field-hint {\n  font-size: 0.9rem;\n  color: var(--text-secondary);\n  margin: 0;\n}\n\n.specialties-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  gap: var(--spacing-sm);\n  margin-top: var(--spacing-xs);\n}\n\n.specialty-button {\n  cursor: pointer;\n  border: 1px solid var(--border-color);\n  border-radius: var(--radius-sm);\n  padding: var(--spacing-sm);\n  font-size: 0.9rem;\n  font-weight: 500;\n  text-align: center;\n  transition: all 0.2s ease;\n  min-height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n\n.specialty-button:hover {\n  transform: translateY(-2px);\n  box-shadow: var(--shadow-sm);\n  border-color: var(--primary-color);\n}\n\n.specialty-button.selected {\n  background-color: var(--primary-color);\n  border-color: var(--primary-color);\n  color: white;\n}\n\n.specialty-button.with-error {\n  border-color: var(--error-color);\n}\n\n:deep(.dark) .specialty-button {\n  background-color: var(--dark-surface-color);\n  border-color: var(--dark-border-color);\n  color: var(--dark-text-color);\n}\n\n:deep(.dark) .specialty-button:hover {\n  border-color: var(--dark-primary-color);\n}\n\n:deep(.dark) .specialty-button.selected {\n  background-color: var(--dark-primary-color);\n  border-color: var(--dark-primary-color);\n  color: white;\n}\n\n.word-preview {\n  background-color: var(--background-color);\n  border-radius: var(--radius-md);\n  padding: var(--spacing-md);\n}\n\n.word-preview h4 {\n  margin: 0 0 var(--spacing-sm);\n  color: var(--text-secondary);\n  font-weight: 500;\n}\n\n.preview-card {\n  border-radius: var(--radius-sm);\n  padding: var(--spacing-md);\n  box-shadow: var(--shadow-sm);\n}\n\n.preview-card h3 {\n  margin: 0;\n  color: var(--text-color);\n  font-size: 1.2rem;\n}\n\n.preview-clue {\n  color: var(--text-secondary);\n  margin: var(--spacing-sm) 0;\n  font-size: 0.95rem;\n}\n\n.preview-tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--spacing-xs);\n  margin-top: var(--spacing-sm);\n}\n\n.preview-tag {\n  background-color: var(--primary-color);\n  color: white;\n  padding: 2px 8px;\n  border-radius: var(--radius-sm);\n  font-size: 0.8rem;\n}\n\n.preview-difficulty {\n  padding: 2px 8px;\n  border-radius: var(--radius-sm);\n  font-size: 0.8rem;\n}\n\n.modal-actions {\n  display: flex;\n  gap: var(--spacing-sm);\n  margin-top: var(--spacing-md);\n}\n\n:deep(.dark) .word-preview {\n  background-color: #1A202C;\n}\n\n:deep(.dark) .preview-card {\n  background-color: #2D3748;\n}\n\n:deep(.dark) .preview-card h3 {\n  color: var(--dark-text-color);\n}\n\n:deep(.dark) .preview-clue {\n  color: var(--dark-text-secondary);\n}\n\n:deep(.dark) .preview-difficulty {\n  background-color: #2D3748;\n  color: var(--dark-text-color);\n}\n\n@media (max-width: 768px) {\n  .specialties-grid {\n    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  }\n\n  .modal-actions {\n    flex-direction: column;\n  }\n\n  .modal-actions button {\n    width: 100%;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n\n.scroll-top-button {\n  position: fixed;\n  bottom: 100px;\n  right: 20px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.8;\n  transition: all 0.3s ease;\n  z-index: 99;\n}\n\n.scroll-top-button:hover {\n  opacity: 1;\n  transform: translateY(-3px);\n}\n</style>\n"],"names":["uiStore","useUIStore","isDarkMode","computed","vocabularyStore","useVocabularyStore","settingsStore","useSettingsStore","highlightDuplicates","ref","onlyActive","searchTerm","showAddModal","selectionMode","selectedWords","Set","expandedIndices","editingIndices","editData","reactive","isLoading","actionInProgress","showScrollTop","mobileControlsExpanded","handleScroll","value","window","scrollY","scrollToTop","scrollTo","top","behavior","toggleMobileControls","normalize","str","replace","toLowerCase","onMounted","addEventListener","onUnmounted","removeEventListener","duplicateMap","counts","displayedWords","forEach","word","key","words","selectedSpecialty","spec","parseInt","filter","w","specialties","includes","selectedDifficulty","diff","difficulty","isActive","trim","term","clue","sort","a","b","localeCompare","toggleExpansion","index","pos","indexOf","push","splice","isExpanded","toggleHighlightDuplicates","toggleOnlyActive","openAddWordModal","closeAddWordModal","newWord","formErrors","isFormValid","Object","values","some","error","isPreviewAvailable","length","validateField","field","async","validateAndAddWord","item","confirm","newWordObj","saveWordsToLocalStorage","alert","cancelEdit","searchWords","formatDifficulty","wordKey","difficultyOptions","label","getLoadingMessage","toggleSelectionMode","clear","selectAllWords","add","deselectAllWords","activateSelectedWords","size","deactivateSelectedWords","deleteSelectedWords","has","JSON","parse","stringify","event","stopPropagation","delete","specialtyIndex","edited","idx","findIndex"],"mappings":"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"}